[
	{"qText": "What is the expression equal to?", "qCode": "var x = ((i=0)=>({valueOf:()=>i--}))();\n console.log((x===x) && (x>x));", "answers":["NaN","undefined","true","false"], "hint":"true", "typos": "radio", "id": 0, "_page": 1},
	{"qText": "What is x equal to?", "qCode": "let x = parseInt(\"010*020\".replace( /\\b0+\\B/g, \"\" ));\n x = ?", "answers":["10","20","100","120","200","210"], "hint":"10", "typos": "radio", "id": 1, "_page": 1},
	{"qText": "What is the expression equal to?", "qCode": "console.log(((10*1).toString()) + 10);", "answers":["10","20","1010","0101","101010"], "hint":"1010", "typos": "radio", "id": 2, "_page": 1},
	{"qText": "What is x equal to?", "qCode": "let x = [1,2,3,4,].length + [1,2,,4,].length;\nx = ?", "answers":["0","4","8","9","10"], "hint":"8", "typos": "radio", "id": 3, "_page": 1},
	{"qText": "What is x equal to?", "qCode": "let x = parseInt(10.10, 10) - isNaN(NaN) + Math.abs(-1.0);\nx = ?", "answers":["-1","1","9","10","11","NaN","undefined"], "hint":"10", "typos": "radio", "id": 4, "_page": 1},
	{"qText": "What is x equal to?", "qCode": "let x = Math.cbrt(8) * Math.sqrt(16);\nx = ?", "answers":["1","8","16","128"], "hint":"8", "typos": "radio", "id": 5, "_page": 2},
	{"qText": "What is x equal to?", "qCode": "let x = (9.55).toFixed(1) / (9.55).toFixed(0);\nx = ?", "answers":["1","0.096","0.96","1.96","0"], "hint":"0.96", "typos": "radio", "id": 6, "_page": 2},
	{"qText": "Choose the correct option", "qCode": "let teamAges=[{age:19},{age:33},{age:57}];\nfunction getAverageAge(arr, key){\nreturn (arr.reduce((sum, val) => sum + val[key], 0) / arr.length).toFixed(0);\n}\nconsole.log(getAverageAge(teamAges, 'age'));", "answers":["35","36","37"], "hint":"36", "typos": "radio", "id": 7, "_page": 2},
	{"qText": "Choose the correct option", "qCode": "console.log((1 && 2 && 3) - (1 && 1));", "answers":["0","1","2","3"], "hint":"2", "typos": "radio", "id": 8, "_page": 2},
	{"qText": "What will the console output?", "qCode": "let firstArray = ['A', 'B'];\nlet secondArray = ['X', ...firstArray, 'Z'];\nlet thirdArray = 'XL';\nlet mergedArray = [...firstArray, ...secondArray, ...thirdArray];\nconsole.log( mergedArray.length );", "answers":["2","3","5","7","8","0"], "hint":"8", "typos": "radio", "id": 9, "_page": 2},
	{"qText": "What will the console output?", "qCode": "let firstObject = {a: 1};\nlet secondObject = {a: 2, length: 3};\nlet mergedObject = {...firstObject, ...secondObject};\nconsole.log( Object.keys(mergedObject).length );", "answers":["0","1","2","3"], "hint":"2", "typos": "radio", "id": 10, "_page": 3},
	{"qText": "What will the console output?", "qCode": "let myArray = [1, 2, 3, 4, 5, 6];\nlet [a, b, ...c, d] = myArray;\nconsole.log(c);", "answers":["[3, 4]","NaN","null","[]","undefined","Error"], "hint":"Error", "typos": "radio", "id": 11, "_page": 3},
	{"qText": "What will the console output?", "qCode": "let myObject = { a: 1, b: 2, c: 3, d: 4};\nlet {c, d, ...a} = myObject;\nconsole.log(a);", "answers":["{ a: 1}","{ b: 2 }","{ a: 1, b: 2 }","3","4","Error"], "hint":"{ a: 1, b: 2 }", "typos": "radio", "id": 12, "_page": 3},
	{"qText": "What will the console output?", "qCode": "let arrayLikeObject = {\n0: 'a', // indexed element\n1: 'b',\nlength: 2,\n};\nArray.from(arrayLikeObject);\nlet spreader = [...arrayLikeObject];", "answers":["{0: 'a', 1: 'b'}","Error","undefined","['a', 'b']"], "hint":"Error", "typos": "radio", "id": 13, "_page": 3},
	{"qText": "What will the console output?", "qCode": "function doSomething() {\nconsole.log( arguments['-1'] );\n}\ndoSomething('first','second','last');", "answers":["last","first","second","null","undefined","Error"], "hint":"undefined", "typos": "radio", "id": 14, "_page": 3},
	{"qText": "What will the alert output?", "qCode": "function doSomething() {\narguments[-1];\narguments[0];\narguments[1];\narguments[2];\nalert(arguments.length);\n}\ndoSomething('A','B','C');", "answers":["0","3","4","Error","undefined"], "hint":"3", "typos": "radio", "id": 15, "_page": 4},
	{"qText": "What will the console output?", "qCode": "function doSomething(first, second, ...rest) {\nconsole.log(rest.length);\n}\ndoSomething('A','B','SoS');", "answers":["0","1","2","3"], "hint":"1", "typos": "radio", "id": 16, "_page": 4},
	{"qText": "What will the console output?", "qCode": "const getPassword = ({ password, ...rest }) => rest\nconst user = {\nname: 'Billy Bones',\nage: 100,\npassword: 'super Password!'\n}\nconsole.log(getPassword(user));", "answers":["{password: 'super Password!', name: 'Billy Bones', age: 100}","{name: 'Billy Bones', age: 100}","{password: 'super Password!'}","{name: 'Billy Bones'}","{age: 100}"], "hint":"{name: 'Billy Bones', age: 100}", "typos": "radio", "id": 17, "_page": 4},
	{"qText": "What will the console output?", "qCode": "const user = {id: 100, name: 'Trump Donald'};\nconst clone1 = {id: 10, ...user, password: 'qwerty1'};\nconst clone2 = {...user, id: 20, password: 'qwerty2'};\nconst clone3 = {...clone1, ...clone2};\nconsole.log(clone3);", "answers":["{id: 100, password: 'qwerty1'}","{id: 10, password: 'qwerty2'}","{id: 20, name: 'Trump Donald', password: 'qwerty2'}","{id: 100, name: 'Trump Donald'}","{id: 100, name: 'Trump Donald', password: 'qwerty1'}"], "hint":"{id: 20, name: 'Trump Donald', password: 'qwerty2'}", "typos": "radio", "id": 18, "_page": 4},
	{"qText": "", "qCode": "", "answers":["","",""], "hint":"", "typos": "radio", "id": 19, "_page": 4},
	{"qText": "", "qCode": "", "answers":["","",""], "hint":"", "typos": "radio", "id": 20, "_page": 5}
]